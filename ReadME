# ðŸ¦‰ Owly - PHP + MySQL API Project  
**Author:** Manuel Spoladore

## Project Description

Owly is a backend platform designed to support complementary learning paths for students. The goal is to offer **cross-functional courses** that integrate multiple subjects, sparking curiosity and active participation in younger learners.

This project provides a **RESTful API built with PHP and MySQL** to manage both courses and subjects.

---

## Technologies Used

- **PHP** (with PDO for secure DB interactions)
- **MySQL** (managed via XAMPP)
- **Postman** (for testing the API endpoints)
- **JSON** (as response format for all endpoints)

---

## Project Structure

The folder architecture is organized as follows:
/config                 # Database and global configuration
â”œâ”€â”€ config.php          # General settings 
â”œâ”€â”€ database.php        # Database connection setup

/controllers            #  Logic handlers
â”œâ”€â”€ CourseController.php    # Controller for course-related logic
â”œâ”€â”€ SubjectController.php   # Controller for subject-related logic

/models                 # Data representation classes
â”œâ”€â”€ course.php          # Model for courses
â”œâ”€â”€ subject.php         # Model for subjects

/routes                 # Route definitions
â”œâ”€â”€ router.php          # Maps URLs to controllers

/public                 # Entry point and publicly accessible files
â”œâ”€â”€ index.php           # Front controller
â”œâ”€â”€ .htaccess           # Apache URL rewriting rules



> All requests are routed through `/public/index.php` using `.htaccess` with Apacheâ€™s mod_rewrite.

---

## Main Features

- âœ… Full **CRUD operations** for `courses` and `subjects`
- ðŸ”’ Data **sanitization and validation** via **PDO**
- ðŸ”€ One-to-many and many-to-many relationships between courses and subjects
- ðŸ“š `GET /courses/full` endpoint returns:
  - Course name
  - Available places
  - Associated subject names (not just IDs)

---

## Available API Endpoints

### ðŸ“˜ Courses

| Method | Endpoint               | Description                      |
|--------|------------------------|----------------------------------|
| POST   | `/courses/create`      | Create a new course              |
| GET    | `/courses`             | Get all courses                  |
| GET    | `/courses/full`        | Get courses with subjects        |
| POST   | `/courses/update`      | Update a course                  |
| POST   | `/courses/delete`      | Delete a course                  |

### ðŸ“š Subjects

| Method | Endpoint               | Description                      |
|--------|------------------------|----------------------------------|
| POST   | `/subjects/create`     | Create a new subject             |
| GET    | `/subjects`            | Get all subjects                 |
| POST   | `/subjects/update`     | Update a subject                 |
| POST   | `/subjects/delete`     | Delete a subject                 |

---

## API Testing

All endpoints have been tested using **Postman** and are fully functional for:

- Creating new records
- Reading single and multiple records
- Updating records
- Deleting records

---

## Possible Future Enhancements

- Development of a **frontend interface** (e.g., with React or Vue)  
- Implementation of **user authentication** (JWT/session-based)  
- Admin dashboard with **analytics and course statistics**

---

ðŸŽ“ *Owly's mission is to make learning more open, flexible, and fun!*
